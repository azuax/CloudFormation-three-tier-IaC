AWSTemplateFormatVersion: "2010-09-09"
Description: "Deployment of high-available and scalable application tier. Depends on Three Tier VPC stack."
Parameters:
    minValue:
        Description: "Minimum number of available instances for the ASG (default: 1)"
        Type: String
        Default: 1
    desValue:
        Description: "Desired capacity instances for the ASG (default: 2)"
        Type: String
        Default: 2
    maxValue:
        Description: "Maximum number of available instances for the ASG (default: 3)"
        Type: String
        Default: 3
    KeyNameValue:
        Description: "Key Name to use in instances"
        Type: AWS::EC2::KeyPair::KeyName
Resources:
    # Application Load Balancer Resources
    PublicALB:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Subnets:
                - !ImportValue PublicSubnet1AZaId
                - !ImportValue PublicSubnet2AZbId
            SecurityGroups:
                - !Ref PublicALBSG
            Tags:
                - Key: Name
                  Value: "PublicALB"

    PublicALBSG:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: "Security group for ALB"
            VpcId: !ImportValue ThreeTierVPCId
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
            Tags:
                - Value: "PublicALBSG"
                  Key: Name

    PublicALBTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            VpcId: !ImportValue ThreeTierVPCId
            Port: 80
            Protocol: "HTTP"

    PublicALBListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: !Ref PublicALB
            DefaultActions:
                - Type: "forward"
                  TargetGroupArn: !Ref PublicALBTargetGroup
            Port: 80
            Protocol: "HTTP"

    # Auto Scaling Resources
    WebserverASG:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            MaxSize: !Ref maxValue
            MinSize: !Ref minValue
            DesiredCapacity: !Ref desValue
            LaunchTemplate:
                Version: "1"
                LaunchTemplateId: !Ref WebserverLaunchTemplate
            VPCZoneIdentifier:
                - !ImportValue AppSubnet1AZaId
                - !ImportValue AppSubnet2AZbId
            TargetGroupARNs:
                - !Ref PublicALBTargetGroup

    WebserverLaunchTemplate:
        Type: AWS::EC2::LaunchTemplate
        Properties:
            LaunchTemplateData:
                ImageId: "ami-0fff1b9a61dec8a5f"
                InstanceType: "t2.micro"
                KeyName: !Ref KeyNameValue
                SecurityGroupIds:
                    - !Ref WebserverSG
                NetworkInterfaces:
                    - DeviceIndex: 0
                      AssociatePublicIpAddress: false
                UserData:
                    Fn::Base64: !Sub
                        - |
                            #!/bin/bash
                            bastion_ip=${PrivateBastionIP}
                            echo "export http_proxy=http://$bastion_ip:3128" >> /etc/profile
                            echo "export https_proxy=http://$bastion_ip:3128" >> /etc/profile
                            source /etc/profile
                            yum install -y httpd
                            systemctl start httpd
                            systemctl enable httpd
                            echo "<h1>ALB with ASG!</h1>" > /var/www/html/index.html
                        - PrivateBastionIP: !ImportValue BastionHostPrivateIP

    HighCPUAlarmForASG:
        Type: AWS::CloudWatch::Alarm
        Properties:
            AlarmDescription: "CPU over 70%"
            MetricName: "CPUUtilization"
            Namespace: "AWS/EC2"
            Statistic: "Average"
            Period: "300"
            EvaluationPeriods: "1"
            Threshold: "70"
            ComparisonOperator: GreaterThanThreshold
            Dimensions:
                - Name: AutoScalingGroupName
                  Value: !Ref WebserverASG
            AlarmActions:
                - !Ref ScaleOutASGPolicy

    ScaleOutASGPolicy:
        Type: AWS::AutoScaling::ScalingPolicy
        Properties:
            AutoScalingGroupName: !Ref WebserverASG
            PolicyType: SimpleScaling
            ScalingAdjustment: "1"
            Cooldown: "300"
            AdjustmentType: ChangeInCapacity

    # Security group for instances deployed by ASG
    WebserverSG:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: "Webserver security group"
            VpcId: !ImportValue ThreeTierVPCId
            SecurityGroupIngress:
                # Allow access from ALB
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  SourceSecurityGroupId: !Ref PublicALBSG
                # Allow SSH access from Bastion host SG
                - IpProtocol: tcp
                  FromPort: 22
                  ToPort: 22
                  SourceSecurityGroupId: !ImportValue BastionHostSG
